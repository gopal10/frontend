commands

git pull origin v1.0.0
git push origin master:v1.0.0

sudo docker run 

 sudo docker system prune -a




//        TypeReference<List<ConceptData>> typeReference = new TypeReference<List<ConceptData>>() {
//        };
//        ObjectMapper mapper = new ObjectMapper();
//        InputStream inputStream = new FileInputStream(new File("/extract-intent-service/src/json/concepts.json"));
//        List<ConceptData> list = mapper.readValue(inputStream, typeReference);



 ssh ubuntu@13.234.1.201
 cat id_rsa.pub
 ssh-keygen -t rsa -C gopalpanchal10@gmail.com



key:  894070131b774dc9b8ba22cd9f50ab2a


jenkinfile: docker run \
  --rm \
  -u root \
  -p 8080:8080 \
  -v jenkins-data:/var/jenkins_home \
  -v /var/run/docker.sock:/var/run/docker.sock \
  -v "$HOME":/home \
  jenkinsci/blueocean



$ docker run -it --rm --name maven-project -v "/home/gopal/Desktop/nerproject":/usr/src/mymaven -w /usr/src/mymaven maven:3.3-jdk-8 mvn clean install


@Autowired
private WebClient.Builder webclientbuilder

webclientbuilder.build()
.get()
.uri("localhost....")
.reterive()
.bodyToMono(movie.class")
.block();


jenkins, aws, ngrok session

intent


ngrok http 4200 -host-header="localhost:4200"



  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    restart: always
    ports:
      - 2181:2181
    network_mode: "host"
    hostname: localhost
      #    mem_limit: 100m
      #    mem_reservation: 100m
    healthcheck:
      test: "exit 0"

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    restart: always
    ports:
      - 9092:9092
        #    expose:
        #      - 9092
    depends_on:
      zookeeper:
        condition: service_healthy
    network_mode: "host"
    hostname: localhost
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_ZOOKEEPER_CONNECT: 'localhost:2181'
      KAFKA_CREATE_TOPICS: "new_query:1:1, test:1:1"
        #    mem_limit: 200m
        #    mem_reservation: 200m
    healthcheck:
      test: "exit 0"

